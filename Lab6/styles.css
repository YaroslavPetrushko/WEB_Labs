/* ===== –ë–∞–∑–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ===== */
:root {
  --bg: #142244;
  --bg2: #0f162e;
  --text: #e5e7eb;
  --muted: #94a3b8;
  --accent: #324C67;
  --accent2: #5e75fa;
  --warn: #fbbf24;
  --card-bg: #273d69;
  --max-width: 1200px;
  --padding: 1.2rem;
  --radius: 1rem;
  --font-base: clamp(1rem, 2vw + 0.3rem, 1.2rem);
  --font-heading: clamp(1.5rem, 3vw + 0.5rem, 2.4rem);
}

/* ===== –ó–∞–≥–∞–ª—å–Ω—ñ —Å—Ç–∏–ª—ñ ===== */
* {
  box-sizing: border-box;
}

html {
  min-height: 100%;
  background: radial-gradient(1000px at 20% -10%, var(--bg), var(--bg2), #03050e);
  color-scheme: dark;
}

body {
  margin: 0;
  font-family: system-ui, -apple-system, Segoe UI, Roboto, sans-serif;
  color: var(--text);
  font-size: var(--font-base);
  display: grid;
  grid-template-columns: 1fr;
  grid-template-areas:
    "header"
    "nav"
    "main"
    "sidebar"
    "footer";
  gap: 1.2rem;
  padding: var(--padding);
  max-width: var(--max-width);
  margin-inline: auto;
}

/* ===== –¢–∏–ø–æ–≥—Ä–∞—Ñ—ñ–∫–∞ ===== */
h1, h2, h3 {
  font-size: var(--font-heading);
  text-align: center;
  color: var(--text);
  margin: 0.5em 0;
}
h1::after {
  content: " üë®‚Äçüíª";
  color: var(--warn);
}
p {
  color: #c7d2fe;
  line-height: 1.6;
  margin-bottom: 0.8rem;
}

/* ===== –®–∞–ø–∫–∞ ===== */
header {
  grid-area: header;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 3rem;
  flex-wrap: wrap;
  background: linear-gradient(90deg, var(--accent), var(--accent2));
  padding: var(--padding);
  border-radius: var(--radius);
  box-shadow: 0 0.3rem 0.8rem rgba(0, 0, 0, 0.3);
}
header h1 {
  font-weight: 600;
  color: #fff;
}
header img {
  border-radius: 50%;
  width: clamp(4rem, 8vw, 6rem);
  height: auto;
  object-fit: cover;
}

/* ===== –ú–µ–Ω—é ===== */
nav {
  grid-area: nav;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 0.8rem;
  background: rgba(39, 61, 105, 0.4);
  border-radius: var(--radius);
  padding: var(--padding);
  backdrop-filter: blur(6px);
}
nav a {
  color: var(--text);
  text-decoration: none;
  font-weight: 500;
  padding: 0.5em 1em;
  border-radius: 0.6em;
  transition: background 0.3s, color 0.3s;
}
nav a:hover,
nav a:focus {
  background: var(--accent2);
  color: #0f172a;
  outline: none;
}

/* ===== –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç ===== */
main {
  grid-area: main;
  background: var(--card-bg);
  border-radius: var(--radius);
  padding: var(--padding);
  box-shadow: 0 0.4rem 0.8rem rgba(0, 0, 0, 0.3);
}

main img {
  display: block;
  margin: 1rem auto;
  border-radius: calc(var(--radius) * 0.8);
  max-width: 100%;
  height: auto;
}

/* ===== –°–∞–π–¥–±–∞—Ä ===== */
aside {
  grid-area: sidebar;
  background: rgba(15, 22, 46, 0.8);
  padding: var(--padding);
  border-radius: var(--radius);
  box-shadow: 0 0.3rem 0.6rem rgba(0, 0, 0, 0.3);
}
aside img {
  display: block;
  margin: 1rem auto;
  border-radius: calc(var(--radius) * 0.8);
  max-width: 100%;
  height: auto;
}

/* ===== –ö–∞—Ä—Ç–∫–∏ ===== */
.cards {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.card {
  background: var(--card-bg);
  border-radius: var(--radius);
  padding: var(--padding);
  box-shadow: 0 0.3rem 0.8rem rgba(0, 0, 0, 0.4);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}
.card:hover {
  transform: translateY(-0.2rem);
  box-shadow: 0 0.6rem 1rem rgba(0, 0, 0, 0.5);
}
.card img {
  max-width: 100%;
  border-radius: calc(var(--radius) * 0.8);
  display: block;
  margin: 0.8rem auto;
}

/* ===== –§—É—Ç–µ—Ä ===== */
footer {
  grid-area: footer;
  text-align: center;
  background: linear-gradient(90deg, var(--accent2), var(--accent));
  padding: var(--padding);
  border-radius: var(--radius);
  color: #fff;
}

/* ===== –§–æ—Ä–º–∏ (–ª–æ–≥—ñ–Ω / —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è) ===== */

body.form-page {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  padding: 0;
  flex-direction: column;
}

form {
  background: var(--bg2);
  border-radius: var(--radius);
  padding: 20px 25px;
  width: 100%;
  max-width: 500px;
  max-height: 90vh;
  overflow-y: auto; 
  display: flex;
  flex-direction: column;
  gap: 12px;
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.4);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

form h2 {
  text-align: center;
  font-size: clamp(1.5rem, 2vw + 0.5rem, 2rem);
  color: var(--text);
  margin-bottom: 0.5rem;
}

form label {
  font-weight: 500;
  color: var(--text);
  display: flex;
  flex-direction: column;
  gap: 0.3rem;
}

/* === –ü–æ–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è === */
input, select, textarea {
  padding: 0.7rem 0.9rem;
  border: 1px solid var(--input-border);
  border-radius: 0.6rem;
  font-size: clamp(0.9rem, 1vw + 0.4rem, 1rem);
  background-color: rgba(20, 34, 68, 0.7);
  color: var(--text);
  transition: border 0.2s ease, box-shadow 0.2s ease, background-color 0.3s ease;
}

/* –ü—ñ–¥—Å–≤—ñ—á—É–≤–∞–Ω–Ω—è –ø—Ä–∏ —Ñ–æ–∫—É—Å—ñ */
input:focus, select:focus, textarea:focus {
  border-color: var(--accent2);
  outline: none;
  box-shadow: 0 0 0.5rem rgba(94, 117, 250, 0.6);
  background-color: rgba(50, 76, 103, 0.7);
}

/* === –†–∞–¥—ñ–æ-–≥—Ä—É–ø–∏, —á–µ–∫–±–æ–∫—Å–∏ === */
.radio-group {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  align-items: center;
  justify-content: center;
}

label:has(input[type="radio"]),
label:has(input[type="checkbox"]) {
  flex-direction: row;
  align-items: center;
  gap: 0.5rem;
  font-weight: 400;
  color: var(--muted);
}

/* === –ö–Ω–æ–ø–∫–∏ === */
button {
  background: linear-gradient(90deg, var(--accent), var(--accent2));
  color: #fff;
  font-weight: 600;
  font-size: clamp(1rem, 1.5vw + 0.5rem, 1.2rem);
  border: none;
  border-radius: 0.6rem;
  padding: 0.9rem;
  cursor: pointer;
  transition: transform 0.2s ease, background 0.3s ease;
}
button:hover {
  background: linear-gradient(90deg, var(--accent2), var(--accent));
  transform: translateY(-0.1rem);
}
button:active {
  transform: scale(0.98);
  background: var(--accent2);
}
button:focus-visible {
  outline: 2px solid var(--warn);
  outline-offset: 4px;
}

/* === –ü—ñ–¥–∫–∞–∑–∫–∏ —Ç–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è === */
.form-hint {
  font-size: clamp(0.8rem, 1vw + 0.3rem, 0.9rem);
  color: var(--muted);
  text-align: center;
}

/* === –ü—Å–µ–≤–¥–æ–µ–ª–µ–º–µ–Ω—Ç–∏ –¥–ª—è –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –±–ª–∏—Å–∫—É === */
form::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: var(--radius);
  background: linear-gradient(135deg, rgba(94, 117, 250, 0.2), transparent 60%);
  pointer-events: none;
}

/* ===== –ú–µ–¥—ñ–∞-–∑–∞–ø–∏—Ç–∏ ===== */

/* –ú–æ–±—ñ–ª—å–Ω—ñ –ø—Ä–∏—Å—Ç—Ä–æ—ó */
@media (max-width: 599px) {
  header {
    gap: 0;
    justify-content: center;
  }
}

/* –ü–ª–∞–Ω—à–µ—Ç–∏ */
@media (min-width: 600px) {
  body {
    grid-template-columns: 2fr 1fr;
    grid-template-areas:
      "header header"
      "nav nav"
      "main sidebar"
      "footer footer";
  }

  .cards {
    flex-direction: row;
    flex-wrap: wrap;
  }

  .card {
    flex: 1 1 calc(50% - 1rem);
  }
}

/* –î–µ—Å–∫—Ç–æ–ø–∏ */
@media (min-width: 1024px) {
  body {
    grid-template-columns: 3fr 1fr;
    gap: 2rem;
  }

  .card {
    flex: 1 1 calc(33.333% - 1rem);
  }

  header, nav, main, aside, footer {
    border-radius: calc(var(--radius) * 1.2);
  }
}

/* ===== –§–æ–∫—É—Å —ñ –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å ===== */
a:focus-visible {
  outline: 2px dashed var(--warn);
  outline-offset: 4px;
}
